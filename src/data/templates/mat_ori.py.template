#!/usr/bin/env python
# coding: utf-8


import sys
# add Cubit libraries to your path

import math
import numpy as np

import pickle

import exodus

e = exodus.exodus('IN_MESH', mode = 'a', array_type = 'numpy')
e.summarize()

with open('euler','rb') as file:
    eulerAngles = pickle.load(file)



axis_1=1
axis_2=2
axis_3=3

e.set_element_variable_number(6)
e.put_element_variable_name('rotation_axis_one',1)
e.put_element_variable_name('rotation_angle_one',2)

e.put_element_variable_name('rotation_axis_two',3)
e.put_element_variable_name('rotation_angle_two',4)

e.put_element_variable_name('rotation_axis_three',5)
e.put_element_variable_name('rotation_angle_three',6)



blockNames=e.get_elem_blk_names()
blockIDs=e.get_elem_blk_ids()



for iBlock in blockIDs:
    theta1=[]
    theta2=[]
    theta3=[]


    _,nelem_in_block,_,_=e.elem_blk_info(iBlock)

    #print(e.elem_blk_info(iBlock))
    for iHex in e.get_block_id_map("EX_ELEM_BLOCK",iBlock):
        #print(f'HexID: {iHex}, theta2: {eulerAngles[0][iHex]} theta1: {eulerAngles[1][iHex]} theta3: {eulerAngles[2][iHex]}')
        theta1.append(eulerAngles[0][iHex])

        theta2.append(eulerAngles[1][iHex])

        theta3.append(eulerAngles[2][iHex])

    
    e.put_element_variable_values(iBlock,'rotation_axis_one',1,axis_1*np.ones(nelem_in_block))
    e.put_element_variable_values(iBlock,'rotation_angle_one',1,theta1)

    e.put_element_variable_values(iBlock,'rotation_axis_two',1,axis_2*np.ones(nelem_in_block))
    e.put_element_variable_values(iBlock,'rotation_angle_two',1,theta2)

    e.put_element_variable_values(iBlock,'rotation_axis_three',1,axis_3*np.ones(nelem_in_block))
    e.put_element_variable_values(iBlock,'rotation_angle_three',1,theta3)

e.close()

